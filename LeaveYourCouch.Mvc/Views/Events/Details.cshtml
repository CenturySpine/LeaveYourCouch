@using LeaveYourCouch.Mvc.Business
@using LeaveYourCouch.Mvc.Controllers
@using LeaveYourCouch.Mvc.Models
@using LeaveYourCouch.Mvc.Models.Events
@model EventDataDetailsViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (!string.IsNullOrEmpty(ViewBag.StatusMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @ViewBag.StatusMessage
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>



}

<div class="container first-content">

    <div class="row">
        <div class="col">
            <div class="card" style="margin: 2px 0">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(model => model.Event.Title)</h5>
                    <h6 class="card-subtitle mb-2 text-muted"> @Model.Event.Date.ToLongDateString()</h6>
                    <h6 class="card-subtitle mb-2 text-muted"> @Model.Event.Time.ToString("g")</h6>
                    <p class="card-text">
                        <h6 class="card-subtitle mb-2">
                            @Html.DisplayNameFor(model => model.Event.MaxSeats)
                        </h6>
                        <h6 class="card-subtitle mb-2 text-muted">
                            @Html.DisplayFor(model => model.Participants.Count)<text>/</text>
                            @Html.DisplayFor(model => model.Event.MaxSeats)
                        </h6>
                        <h6 class="card-subtitle mb-2">
                            @Html.DisplayNameFor(model => model.Event.Address)
                        </h6>
                        <h6 class="card-subtitle mb-2 text-muted">
                            @Html.DisplayFor(model => model.Event.Address)
                        </h6>
                        <h6 class="card-subtitle mb-2">
                            @Html.DisplayNameFor(model => model.Event.MeetingDetails)
                        </h6>
                        <h6 class="card-subtitle mb-2 text-muted">
                            @Html.DisplayFor(model => model.Event.MeetingDetails)
                        </h6>

                    </p>
                </div>
            </div>
        </div>

        <div class="col-md">
            <div class="card" style="margin: 2px 0">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayNameFor(model => model.Event.Description)</h5>

                    @Html.DisplayFor(model => model.Event.Description)
                </div>
            </div>
        </div>
    </div>

    <hr />
    <div class="row text-center">
        @foreach (var distances in Model.UserData)
        {
            string icon;
            switch (distances.DirectionMode)
            {
                case DirectionModes.driving:
                    icon = "fas fa-car";
                    break;
                case DirectionModes.walking:
                    icon = "fas fa-shoe-prints";
                    break;
                case DirectionModes.bicycling:
                    icon = "fas fa-bicycle";
                    break;
                case DirectionModes.transit:
                    icon = "fas fa-bus";
                    break;
                default:
                    throw new ArgumentOutOfRangeException();
            }
            <div class="col">
                <span class="event-user-ditance">
                    <i class='@icon'></i>
                </span>
            </div>
        }

    </div>
    <div class="row text-center">
        @foreach (var distances in Model.UserData)
        {
            <div class="col">
                <span class="event-user-ditance">
                    <a href=@distances.MapLink target="_blank">
                        @distances.Distance.ToString("##.0") @distances.Unit -
                        @distances.Duration min
                    </a>
                </span>
            </div>
        }

    </div>
    <hr />
    <div class="row">
        @{
            var currentUser = UserHelpers.UserName();
            bool isUnsub = Model.Participants.Any(p => p.User.Email == currentUser);
            if (isUnsub)
            {
                <div class="col">
                    <a Class="btn btn-block  btn-warning" Style="margin: 2px 0;"
                       href="@Url.Action("UnSubscribe", "Events", new {id=@Model.Event.Id})">
                        <span>
                            <i class="fas fa-sign-out-alt"></i>
                        </span>
                        <span class="d-none d-md-inline">Unsubscribe</span>

                    </a>
                </div>
            }
            else
            {
                <div class="col">
                    <a Class="btn btn-block  btn-success" Style="margin: 2px 0;" href="@Url.Action("Subscribe", "Events", new {id=@Model.Event.Id})">
                        <span>
                            <i class="fas fa-sign-in-alt"></i>
                        </span>
                        <span class="d-none d-md-inline">Subscribe</span>
                    </a>
                </div>
            }
        }




        @if (Model.CanModify)
        {
            <div class="col">

                <a Class="btn btn-block  btn-primary" Style="margin: 2px 0;" href="@Url.Action("Edit", "Events", new {id=@Model.Event.Id})">
                    <span>
                        <i class="fas fa-edit"></i>
                    </span>
                    <span class="d-none d-md-inline">Edit</span>
                </a>
            </div>
            <div class="col">
                <a Class="btn btn-block  btn-danger" Style="margin: 2px 0;" href="@Url.Action("Delete", "Events", new {id=@Model.Event.Id})">
                    <span>
                        <i class="fas fa-trash"></i>
                    </span>
                    <span class="d-none d-md-inline">Delete</span>
                </a>
            </div>
        }
        <div class="col-lg">
            <a Class="btn btn-block  btn-outline-secondary" Style="margin: 2px 0;" href="@Url.Action("Index", "Events")">
                <span>
                    <i class="fas fa-list-ul"></i>
                </span>
                <span class="d-none d-md-inline">Back to list</span>
            </a>
        </div>
    </div>
    <div class="row">
        <div class="col text-center">
            <span style="font-size: 1.3em; color: black; ">
                <i class="fas fa-user-check"></i>
            </span>
            <h5 class="text-center d-none d-md-block d-xl-none">Confirmed</h5>
            @foreach (var part in Model.Participants.Where((p => p.Status == ParticipationStatus.Confirmed)).OrderBy(p => p.SubscriptionTime).Reverse())
            {
                string color = part.User.Gender == Gender.Female ? "pink" : "blue";
                <div class="text-center" style="border-width: 0px; border-color: black; border-style: solid; margin: 2px;background: @color">
                    @Html.ActionLink(part.User.Pseudo, "Profile", "Users",
                        new {id = part.User.Id}, new {style = "color:black;"})
                </div>
            }
        </div>
        <div class="col text-center">
            <span style="font-size: 1.3em; color: black; ">
                <i class="fas fa-user-clock"></i>
            </span>
            <h5 class="text-center d-none d-md-block d-xl-none">Waiting list</h5>
            @foreach (var part in Model.Participants.Where((p => p.Status == ParticipationStatus.WaitingList)).OrderBy(p => p.SubscriptionTime).Reverse())
            {
                string color = part.User.Gender == Gender.Female ? "pink" : "blue";
                <div class="text-center" style="border-width: 0px; border-color: black; border-style: solid;margin: 2px;background: @color">

                    @Html.ActionLink(part.User.Pseudo, "Profile", "Users",
                        new {id = part.User.Id}, new { style = "color:black;" })
                </div>
            }
        </div>
    </div>
</div>

